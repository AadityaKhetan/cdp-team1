basePath: /api
definitions:
  dto.HealthResponseDTO:
    properties:
      status:
        type: string
    type: object
  dto.LoginRequestDTO:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  dto.LoginResponseDTO:
    properties:
      auth_token:
        type: string
    type: object
  dto.LogoutResponseDTO:
    properties:
      message:
        type: string
    type: object
  dto.VerificationRequestDTO:
    properties:
      role:
        type: string
      user_id:
        type: string
    type: object
  errs.AppError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
info:
  contact:
    email: ayan59dutta@gmail.com
    name: Ayan Dutta
  description: Swagger API for Golang Project.
  termsOfService: http://swagger.io/terms/
  title: Auth Service APIs
  version: "1.0"
paths:
  /auth:
    get:
      description: Heath Check
      produces:
      - application/json
      responses:
        "200":
          description: Service is healthy
          schema:
            $ref: '#/definitions/dto.HealthResponseDTO'
        "404":
          description: Service is unavailable
          schema:
            $ref: '#/definitions/dto.HealthResponseDTO'
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: User login
        in: body
        name: dto.LoginRequestDTO
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponseDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.AppError'
      tags:
      - auth
  /auth/logout:
    post:
      description: Logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LogoutResponseDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.AppError'
      security:
      - Bearer Token: []
      tags:
      - auth
  /auth/verify:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Verify Token
        in: body
        name: dto.VerificationRequestDTO
        required: true
        schema:
          $ref: '#/definitions/dto.VerificationRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.AppError'
      security:
      - Bearer Token: []
      tags:
      - auth
securityDefinitions:
  Bearer Token:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
