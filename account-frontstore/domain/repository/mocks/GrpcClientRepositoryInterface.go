// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	protos "qwik.in/account-frontstore/protos"
)

// GrpcClientRepositoryInterface is an autogenerated mock type for the GrpcClientRepositoryInterface type
type GrpcClientRepositoryInterface struct {
	mock.Mock
}

// GetCartByCustomerId provides a mock function with given fields: customerId
func (_m *GrpcClientRepositoryInterface) GetCartByCustomerId(customerId string) ([]*protos.Product, error) {
	ret := _m.Called(customerId)

	var r0 []*protos.Product
	if rf, ok := ret.Get(0).(func(string) []*protos.Product); ok {
		r0 = rf(customerId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*protos.Product)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(customerId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPaymentMethodsByCustomerId provides a mock function with given fields: customerId
func (_m *GrpcClientRepositoryInterface) GetPaymentMethodsByCustomerId(customerId string) []*protos.PaymentMode {
	ret := _m.Called(customerId)

	var r0 []*protos.PaymentMode
	if rf, ok := ret.Get(0).(func(string) []*protos.PaymentMode); ok {
		r0 = rf(customerId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*protos.PaymentMode)
		}
	}

	return r0
}

// GetRewardPointsByCustomerId provides a mock function with given fields: customerId
func (_m *GrpcClientRepositoryInterface) GetRewardPointsByCustomerId(customerId string) (*int32, error) {
	ret := _m.Called(customerId)

	var r0 *int32
	if rf, ok := ret.Get(0).(func(string) *int32); ok {
		r0 = rf(customerId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*int32)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(customerId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTransactionRewardPointsByCustomerId provides a mock function with given fields: customerId
func (_m *GrpcClientRepositoryInterface) GetTransactionRewardPointsByCustomerId(customerId string) int32 {
	ret := _m.Called(customerId)

	var r0 int32
	if rf, ok := ret.Get(0).(func(string) int32); ok {
		r0 = rf(customerId)
	} else {
		r0 = ret.Get(0).(int32)
	}

	return r0
}
