// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Ravikumar S",
            "email": "ravikumarsravi1999@gmail.com"
        },
        "license": {
            "name": "Apache 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "This request will return 200 OK if server is up..",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "To check if the service is running or not.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer": {
            "post": {
                "description": "Lets admin create customer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Create Customer",
                "parameters": [
                    {
                        "description": "New customer to add",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    }
                }
            }
        },
        "/customer/email/{customerEmail}": {
            "get": {
                "description": "Lets admin get customer by customer email.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Get Customer by Email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer email",
                        "name": "customerEmail",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    }
                }
            }
        },
        "/customer/{customerId}": {
            "get": {
                "description": "Lets admin get customer by customer id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Get Customer by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer id",
                        "name": "customerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    }
                }
            },
            "put": {
                "description": "Lets admin update customer by customer id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Update Customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer id",
                        "name": "customerId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated customer",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    }
                }
            },
            "delete": {
                "description": "Lets admin delete customer by customer id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Delete Customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer id",
                        "name": "customerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "Get admin users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Get admins",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AdminUser"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AdminUser": {
            "type": "object",
            "properties": {
                "date_added": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                },
                "user_group": {
                    "type": "string"
                },
                "user_group_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "model.Customer": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "TBC",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "area": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "country": {
                                "type": "string"
                            },
                            "default": {
                                "type": "integer"
                            },
                            "house_number": {
                                "type": "string"
                            },
                            "pincode": {
                                "type": "string"
                            },
                            "street": {
                                "type": "string"
                            }
                        }
                    }
                },
                "affiliate": {
                    "type": "object",
                    "properties": {
                        "bank_account_name": {
                            "type": "string"
                        },
                        "bank_account_number": {
                            "type": "string"
                        },
                        "bank_branch_number": {
                            "type": "string"
                        },
                        "bank_name": {
                            "type": "string"
                        },
                        "bank_swift_code": {
                            "type": "string"
                        },
                        "commission": {
                            "type": "string"
                        },
                        "company": {
                            "type": "string"
                        },
                        "status": {
                            "type": "integer"
                        },
                        "tax": {
                            "type": "string"
                        },
                        "tracking": {
                            "type": "string"
                        },
                        "website": {
                            "type": "string"
                        }
                    }
                },
                "agree": {
                    "type": "integer"
                },
                "approved": {
                    "type": "integer"
                },
                "customer_group_id": {
                    "type": "integer"
                },
                "customer_id": {
                    "type": "string"
                },
                "date_added": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "newsletter": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "safe": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:7002",
	BasePath:         "/api/customer-admin",
	Schemes:          []string{},
	Title:            "Swiggy Qwik - Customer-Admin module",
	Description:      "This microservice is for Customer-Admin.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
