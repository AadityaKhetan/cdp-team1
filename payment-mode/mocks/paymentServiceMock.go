// Code generated by MockGen. DO NOT EDIT.
// Source: qwik.in/payment-mode/domain/services (interfaces: PaymentService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	app_errors "qwik.in/payment-mode/app-errors"
	models "qwik.in/payment-mode/domain/models"
)

// MockPaymentService is a mock of PaymentService interface.
type MockPaymentService struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentServiceMockRecorder
}

// MockPaymentServiceMockRecorder is the mock recorder for MockPaymentService.
type MockPaymentServiceMockRecorder struct {
	mock *MockPaymentService
}

// NewMockPaymentService creates a new mock instance.
func NewMockPaymentService(ctrl *gomock.Controller) *MockPaymentService {
	mock := &MockPaymentService{ctrl: ctrl}
	mock.recorder = &MockPaymentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaymentService) EXPECT() *MockPaymentServiceMockRecorder {
	return m.recorder
}

// AddPaymentMode mocks base method.
func (m *MockPaymentService) AddPaymentMode(arg0 *models.PaymentMode, arg1 string) *app_errors.AppError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddPaymentMode", arg0, arg1)
	ret0, _ := ret[0].(*app_errors.AppError)
	return ret0
}

// AddPaymentMode indicates an expected call of AddPaymentMode.
func (mr *MockPaymentServiceMockRecorder) AddPaymentMode(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddPaymentMode", reflect.TypeOf((*MockPaymentService)(nil).AddPaymentMode), arg0, arg1)
}

// CheckBalanceAndCompletePayment mocks base method.
func (m *MockPaymentService) CheckBalanceAndCompletePayment(arg0 *models.PaymentRequest) (bool, *app_errors.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckBalanceAndCompletePayment", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(*app_errors.AppError)
	return ret0, ret1
}

// CheckBalanceAndCompletePayment indicates an expected call of CheckBalanceAndCompletePayment.
func (mr *MockPaymentServiceMockRecorder) CheckBalanceAndCompletePayment(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckBalanceAndCompletePayment", reflect.TypeOf((*MockPaymentService)(nil).CheckBalanceAndCompletePayment), arg0)
}

// GetPaymentMode mocks base method.
func (m *MockPaymentService) GetPaymentMode(arg0 string) (*models.UserPaymentMode, *app_errors.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPaymentMode", arg0)
	ret0, _ := ret[0].(*models.UserPaymentMode)
	ret1, _ := ret[1].(*app_errors.AppError)
	return ret0, ret1
}

// GetPaymentMode indicates an expected call of GetPaymentMode.
func (mr *MockPaymentServiceMockRecorder) GetPaymentMode(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPaymentMode", reflect.TypeOf((*MockPaymentService)(nil).GetPaymentMode), arg0)
}

// GetUserId mocks base method.
func (m *MockPaymentService) GetUserId(arg0 string) (string, *app_errors.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserId", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(*app_errors.AppError)
	return ret0, ret1
}

// GetUserId indicates an expected call of GetUserId.
func (mr *MockPaymentServiceMockRecorder) GetUserId(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserId", reflect.TypeOf((*MockPaymentService)(nil).GetUserId), arg0)
}
